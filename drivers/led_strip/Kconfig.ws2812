# Copyright (c) 2017 Linaro Limited
# Copyright (c) 2019 Nordic Semiconductor ASA
#
# SPDX-License-Identifier: Apache-2.0

# The following blog post is an excellent resource about pulse timing:
#
# https://wp.josh.com/2014/05/13/ws2812-neopixels-are-not-so-finicky-once-you-get-to-know-them/

menuconfig WS2812_STRIP
	bool "Enable WS2812 (and compatible) LED strip driver"
	select LED_STRIP_RGB_SCRATCH
	help
	  Enable LED strip driver for daisy chains of WS2812-ish
	  (or WS2812B, WS2813, SK6812, or compatible) devices.

choice WS2812_STRIP_DRIVER
	prompt "Driver backend"
	default WS2812_STRIP_SPI
	depends on WS2812_STRIP

config WS2812_STRIP_SPI
	bool "Enable the SPI driver"
	depends on SPI
	help
	  The SPI driver is portable, but requires significantly more
	  memory (1 byte of overhead per bit of pixel data).

config WS2812_STRIP_GPIO
	bool "Enable the GPIO driver"
	# Only an Cortex-M0 inline assembly implementation for the nRF51
	# is supported currently.
	depends on SOC_SERIES_NRF51X || SOC_FAMILY_STM32
	help
	  The GPIO driver does bit-banging with inline assembly,
	  and is not available on all SoCs.

endchoice

config WS2812_STRIP_GPIO_CYCLES_T1H
	int "Number of CPU cycles corresponding to T1H timing"
	default 12
	depends on WS2812_STRIP_GPIO
	help
	  This value is used to generate NOP instruction to create delay
	  Compute this timing with your CPU frequency
	  T1H: nanoseconds for T1H timing
	  F_CPU: cpu frequency in Hz
	  Cycles = T1H * F_CPU / 1000000000
	  If your CPU has flash wait states, consider tweaking this value down

config WS2812_STRIP_GPIO_CYCLES_T1L
	int "Number of CPU cycles corresponding to T1L timing"
	default 8
	depends on WS2812_STRIP_GPIO
	help
	  This value is used to generate NOP instruction to create delay
	  Compute this timing with your CPU frequency
	  T1L: nanoseconds for T1L timing
	  F_CPU: cpu frequency in Hz
	  Cycles = T1L * F_CPU / 1000000000
	  If your CPU has flash wait states, consider tweaking this value down

config WS2812_STRIP_GPIO_CYCLES_T0H
	int "Number of CPU cycles corresponding to T0H timing"
	default 4
	depends on WS2812_STRIP_GPIO
	help
	  Compute this timing with your CPU frequency
	  T0H: nanoseconds for T0H timing
	  F_CPU: cpu frequency in Hz
	  Cycles = T0H * F_CPU / 1000000000

config WS2812_STRIP_GPIO_CYCLES_T0L
	int "Number of CPU cycles corresponding to T0L timing"
	default 8
	depends on WS2812_STRIP_GPIO
	help
	  Compute this timing with your CPU frequency
	  T0L: nanoseconds for T0L timing
	  F_CPU: cpu frequency in Hz
	  Cycles = T0L * F_CPU / 1000000000